generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
  id String @id @default(uuid())

  firstName String @map("first_name")
  lastName  String @map("last_name")
  email     String @unique
  password  String

  role UserRole @default(USER)

  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
  todoLists TodoList[]

  @@map("users")
}

model Todo {
  id String @id @default(uuid())

  shortDescription String  @map("short_description")
  longDescription  String? @map("long_description")

  dueDate DateTime @map("due_time")

  completed Boolean  @default(false) @map("completed_at")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  todoList   TodoList? @relation(fields: [todoListId], references: [id], onDelete: Cascade)
  todoListId String?   @map("todo_list_id")

  @@map("todos")
}

model TodoList {
  id        String   @id @default(uuid())
  title     String
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId   String   @map("owner_id")
  todos     Todo[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([ownerId, title], map: "ux_todo_lists_owner_title")
  @@map("todo_lists")
}

enum UserRole {
  USER
  ADMIN
}
